version: "3.9"
services:
  shoko_server:
    container_name: shoko-server
    image: shokoanime/server:daily
    restart: unless-stopped
    ports:
      - 8111:8111
    environment:
      - PUID
      - PGID
      - TZ
      - AVDUMP_MONO=true
    volumes:
      - "${SHOKO_ROOT_DIR}:/home/shoko/.shoko"
      - "${ANIME_ROOT_DIR}:/mnt"
  jellyfin:
    container_name: jellyfin
    image: lscr.io/linuxserver/jellyfin
    restart: unless-stopped
    ports:
      - 1900:1900/udp
      - 7359:7359/udp
      - 8000:8000
      - 8096:8096
    privileged: true
    group_add:
      - "122"
    devices:
      - /dev/dri:/dev/dri
    environment:
      - PUID
      - PGID
      - TZ
    volumes:
      - "${JELLYFIN_ROOT_DIR}:/config"
      - "${JELLYFIN_WEB_DIR}:/usr/share/jellyfin/web"
      - "${JELLYFIN_FFMPEG_DIR}:/usr/lib/jellyfin-ffmpeg"
      - "${ANIME_LIBRARY_DIR}:/anime"
      - "${MUSIC_LIBRARY_DIR}:/music"
  tailscale:
    container_name: tristy-tailscale
    hostname: tristy-tailscale
    image: tailscale/tailscale:latest
    restart: unless-stopped
    network_mode: host
    volumes:
      - "${TAILSCALE_ROOT_DIR}:/var/lib"
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
      - sys_module
    command: tailscaled
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    privileged: true
    network_mode: host
    environment:
      - TZ
      - WEBPASSWORD=${PIHOLE_WEBPASSWORD}
    volumes:
      - "${PIHOLE_ROOT_DIR}:/etc/pihole"
      - "${PIHOLE_DNSMASQ_DIR}:/etc/dnsmasq.d"
    cap_add:
      - NET_ADMIN
    restart: unless-stopped
  netdata:
    container_name: netdata
    image: netdata/netdata:latest
    privileged: true
    ports:
      - 19999:19999
    environment:
      - TZ
      - PGID=998
      - NETDATA_CLAIM_TOKEN
      - NETDATA_CLAIM_URL
      - NETDATA_CLAIM_ROOMS
    volumes:
      - "${NETDATA_CONFIG_DIR}:/etc/netdata"
      - "${NETDATA_LIB_DIR}:/var/lib/netdata"
      - "${NETDATA_CACHE_DIR}:/var/cache/netdata"
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-releaase:/host/etc/os-release:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    restart: unless-stopped
  gonic:
    image: sentriz/gonic:latest
    environment:
      - TZ
      - PGID
      - PUID
      - GONIC_GENRE_SPLIT=;
      - GONIC_SCAN_INTERVAL=120
    ports:
      - 8097:80
      - 4747:4747
    volumes:
      - "${GONIC_ROOT_DIR}:/data"
      - "${MUSIC_LIBRARY_DIR}:/music:ro"
      - "${GONIC_CACHE_DIR}:/cache"
    group_add:
      - audio
    devices:
      - /dev/snd:/dev/snd
    restart: unless-stopped
  # sonarr:
  #   image: lscr.io/linuxserver/sonarr:latest
  #   container_name: sonarr
  #   environment:
  #     - "PUID=${UID}"
  #     - "PGID=${GID}"
  #     - TZ=Asia/Manila
  #   volumes:
  #     - "${SONARR_ROOT_DIR}:/config"
  #     - "${VIDEO_ROOT_DIR}:/data"
  #   ports:
  #     - 8989:8989
  #   restart: unless-stopped
  # caddy:
  #   container_name: caddy
  #   image: alexandzors/caddy:latest
  #   restart: unless-stopped
  #   network_mode: service:tailscale
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "5m"
  #       max-file: "2"
  #       compress: "true"
  #   volumes:
  #     - "${CADDYFILE}:/etc/caddy/Caddyfile:ro"
  #     - "${CADDY_DATA_DIR}:/data"
  #     - "${CADDY_CONFIG_DIR}:/config"
