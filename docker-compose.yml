version: "3.9"
services:
  shoko_server:
    container_name: shoko-server
    image: shokoanime/server:daily
    restart: unless-stopped
    ports:
      - 8111:8111
    environment:
      - PUID
      - PGID
      - TZ
    volumes:
      - "${SHOKO_ROOT_DIR}:/home/shoko/.shoko"
      - "${ANIME_ROOT_DIR}:/mnt"
      - "${ANIME_PUBLIC_DIR}:/mnt/anime-public"
      - "${ANIME_MOVIE_PUBLIC_DIR}:/mnt/anime-movie-public"
    labels:
      - "diun.enable=true"
  jellyfin:
    container_name: jellyfin
    image: linuxserver/jellyfin:latest
    depends_on:
      - shoko_server
    restart: unless-stopped
    ports:
      - 1900:1900/udp
      - 7359:7359/udp
      - 8000:8000
      - 8096:8096
    devices:
      - /dev/dri:/dev/dri
    environment:
      - PUID
      - PGID
      - TZ
      - DOCKER_MODS=linuxserver/mods:jellyfin-opencl-intel
    volumes:
      - "${JELLYFIN_ROOT_DIR}:/config"
      - "${JELLYFIN_WEB_DIR}:/usr/share/jellyfin/web"
      - "${JELLYFIN_FFMPEG_DIR}:/usr/lib/jellyfin-ffmpeg"
      - "${ANIME_PRIVATE_DIR}:/anime-private"
      - "${ANIME_MOVIE_PRIVATE_DIR}:/anime-movie-private"
      - "${ANIME_PUBLIC_DIR}:/anime-public"
      - "${ANIME_MOVIE_PUBLIC_DIR}:/anime-movie-public"
      - "${MUSIC_LIBRARY_DIR}:/music"
    labels:
      - "diun.enable=true"
  tailscale:
    container_name: tailscale
    hostname: tailscale
    image: tailscale/tailscale:latest
    restart: unless-stopped
    network_mode: host
    privileged: true
    volumes:
      - "${TAILSCALE_ROOT_DIR}:/var/lib"
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
      - sys_module
    command: tailscaled
    labels:
      - "diun.enable=true"
  pihole:
    container_name: pihole
    image: pihole/pihole:2022.05
    depends_on:
      - unbound
    hostname: pihole
    domainname: local
    mac_address: de:ad:be:ef:ff:01
    networks:
      macvlan0:
        ipv4_address: ${PIHOLE_MACVLAN_IP}
    dns:
      - "${UNBOUND_MACVLAN_IP}"
    ports:
      - 443/tcp
      - 53/tcp
      - 53/udp
      - 80/udp
    environment:
      - TZ
      - WEBPASSWORD=${PIHOLE_WEBPASSWORD}
      - ServerIP=${PIHOLE_MACVLAN_IP}
      - VIRTUAL_HOST=pihole.local
    volumes:
      - "${PIHOLE_ROOT_DIR}:/etc/pihole"
      - "${PIHOLE_DNSMASQ_DIR}:/etc/dnsmasq.d"
    restart: always
    labels:
      - "diun.enable=true"
  unbound:
    container_name: unbound
    image: mvance/unbound:1.16.0
    networks:
      macvlan0:
        ipv4_address: ${UNBOUND_MACVLAN_IP}
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 8953:8953/tcp
    volumes:
      - "${UNBOUND_ROOT_DIR}:/opt/unbound/etc/unbound"
    restart: always
    healthcheck:
      disable: true
    labels:
      - "diun.enable=true"
  netdata:
    container_name: netdata
    image: netdata/netdata:stable
    privileged: true
    ports:
      - 19999:19999
    environment:
      - TZ
      - PGID=998
      - NETDATA_CLAIM_TOKEN
      - NETDATA_CLAIM_URL
      - NETDATA_CLAIM_ROOMS
    volumes:
      - "${NETDATA_CONFIG_DIR}:/etc/netdata"
      - "${NETDATA_LIB_DIR}:/var/lib/netdata"
      - "${NETDATA_CACHE_DIR}:/var/cache/netdata"
      - "${UNBOUND_ROOT_DIR}:/opt/unbound/etc/unbound"
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-releaase:/host/etc/os-release:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    restart: unless-stopped
    labels:
      - "diun.enable=true"
  gonic:
    container_name: gonic
    image: sentriz/gonic:nightly
    environment:
      - TZ
      - PGID
      - PUID
      - GONIC_GENRE_SPLIT=;
      - GONIC_SCAN_INTERVAL=120
    ports:
      - 8097:80
      - 4747:4747
    volumes:
      - "${GONIC_ROOT_DIR}:/data"
      - "${MUSIC_LIBRARY_DIR}:/music:ro"
      - "${PODCAST_ROOT_DIR}:/podcasts:ro"
      - "${GONIC_CACHE_DIR}:/cache"
    group_add:
      - audio
    devices:
      - /dev/snd:/dev/snd
    restart: unless-stopped
    labels:
      - "diun.enable=true"
  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    depends_on:
      - qbittorrent
    environment:
      - TZ
      - PGID
      - PUID
    volumes:
      - "${SONARR_ROOT_DIR}:/config"
      - "${VIDEO_ROOT_DIR}:/data"
      - "${ANIME_PUBLIC_DIR}:/data/anime/anime-public"
    ports:
      - 8989:8989
    restart: unless-stopped
    labels:
      - "diun.enable=true"
  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    depends_on:
      - qbittorrent
    environment:
      - TZ
      - PGID
      - PUID
    volumes:
      - "${RADARR_ROOT_DIR}:/config"
      - "${VIDEO_ROOT_DIR}:/data"
      - "${ANIME_MOVIE_PUBLIC_DIR}:/data/anime/anime-movie-public"
    ports:
      - 7878:7878
    restart: unless-stopped
    labels:
      - "diun.enable=true"
  qbittorrent:
    image: linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - TZ
      - PGID
      - PUID
      - WEBUI_PORT=8080
    volumes:
      - "${QBITTORRENT_ROOT_DIR}:/config"
      - "${VIDEO_ROOT_DIR}:/data"
    ports:
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
    restart: unless-stopped
    labels:
      - "diun.enable=true"
  meshcentral:
    image: ghcr.io/gurucomputing/meshcentral-docker:latest
    container_name: meshcentral
    environment:
      - TZ
      - PGID
      - PUID
      - MONGODB_URL
      - MONGODB_NAME=meshcentral
      - DB_ENCRYPT_KEY
      - AGENT_PORT=8800
    ports:
      - 8800:8800
      - 8888:80
      - 9999:443
    volumes:
      - "${MESHCENTRAL_DATA_DIR}:/meshcentral/meshcentral-data"
      - "${MESHCENTRAL_FILES_DIR}:/meshcentral/meshcentral-files"
      - "${MESHCENTRAL_BACKUP_DIR}:/meshcentral/meshcentral-backup"
    restart: always
    labels:
      - "diun.enable=true"
  diun:
    image: crazymax/diun:latest
    container_name: diun
    command: serve
    volumes:
      - "${DIUN_DATA_DIR}:/data"
      - "${DIUN_CONFIG_FILE}:/diun.yml:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      - TZ
      - LOG_LEVEL=info
      - LOG_JSON=false
    labels:
      - "diun.enable=true"
    restart: always

networks:
  macvlan0:
    external: true
