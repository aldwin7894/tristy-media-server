services:
  shoko-server:
    container_name: shoko-server
    image: shokoanime/server:daily
    ports:
      - 8111:8111
    environment:
      - PUID
      - PGID
      - TZ
    volumes:
      - "${SHOKO_ROOT_DIR}:/home/shoko/.shoko"
      - "${SHOKO_ROOT_DIR}/Shoko.CLI/webui:/usr/src/app/build/webui"
      - "${ANIME_ROOT_DIR}:/mnt"
    restart: unless-stopped
    labels:
      - diun.enable=true
  navidrome:
    container_name: navidrome
    image: deluan/navidrome:develop
    environment:
      - TZ
      - PGID
      - PUID
      - ND_CONFIGFILE=/data/navidrome.toml
    ports:
      - 8097:4533
    volumes:
      - "${NAVIDROME_ROOT_DIR}:/data"
      - "${MUSIC_ROOT_DIR}:/music:ro"
      - "${PODCAST_ROOT_DIR}:/podcasts:ro"
    restart: unless-stopped
    labels:
      - diun.enable=true
  qbittorrent:
    image: linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - TZ
      - PGID
      - PUID
      - WEBUI_PORT=8081
    volumes:
      - "${QBITTORRENT_ROOT_DIR}:/config"
      - "${DOWNLOAD_ROOT_DIR}:/data/downloads"
      - "${MUSIC_DOWNLOAD_DIR}:/data/music-downloads"
    ports:
      - 8081:8081
      - 6881:6881
      - 6881:6881/udp
    restart: unless-stopped
    labels:
      - diun.enable=true
  prowlarr:
    image: linuxserver/prowlarr:develop
    container_name: prowlarr
    depends_on:
      - qbittorrent
    environment:
      - TZ
      - PGID
      - PUID
    volumes:
      - "${PROWLARR_ROOT_DIR}:/config"
    ports:
      - 9696:9696
    restart: unless-stopped
    labels:
      - diun.enable=true
  sonarr:
    image: linuxserver/sonarr:develop
    container_name: sonarr
    depends_on:
      - qbittorrent
      - prowlarr
    environment:
      - TZ
      - PGID
      - PUID
    volumes:
      - "${SONARR_ROOT_DIR}:/config"
      - "${VIDEO_ROOT_DIR}:/data"
      - "${DOWNLOAD_ROOT_DIR}:/data/downloads"
    ports:
      - 8989:8989
    restart: unless-stopped
    labels:
      - diun.enable=true
  radarr:
    image: linuxserver/radarr:develop
    container_name: radarr
    depends_on:
      - qbittorrent
      - prowlarr
    environment:
      - TZ
      - PGID
      - PUID
    volumes:
      - "${RADARR_ROOT_DIR}:/config"
      - "${VIDEO_ROOT_DIR}:/data"
      - "${DOWNLOAD_ROOT_DIR}:/data/downloads"
    ports:
      - 7878:7878
    restart: unless-stopped
    labels:
      - diun.enable=true
  homarr:
    container_name: homarr
    image: ghcr.io/ajnart/homarr:latest
    environment:
      - TZ
      - PGID
      - PUID
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "${HOMARR_ROOT_DIR}/configs:/app/data/configs"
      - "${HOMARR_ROOT_DIR}/icons:/app/public/icons"
      - "${HOMARR_ROOT_DIR}/data:/data"
    ports:
      - 7575:7575
    restart: unless-stopped
    labels:
      - diun.enable=true
  netdata:
    container_name: netdata
    image: netdata/netdata:stable
    pid: host
    network_mode: host
    environment:
      - TZ
      - PGID=998
      - NETDATA_CLAIM_TOKEN
      - NETDATA_CLAIM_URL
      - NETDATA_CLAIM_ROOMS
    volumes:
      - "${NETDATA_CONFIG_DIR}:/etc/netdata"
      - "${NETDATA_LIB_DIR}:/var/lib/netdata"
      - "${NETDATA_CACHE_DIR}:/var/cache/netdata"
      - "${UNBOUND_ROOT_DIR}/unbound:/opt/unbound/etc/unbound"
      - /:/host/root:ro,rslave
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /etc/localtime:/etc/localtime:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-releaase:/host/etc/os-release:ro
      - /var/log:/host/var/log:ro
      - /run/dbus:/run/dbus:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    cap_add:
      - SYS_PTRACE
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    restart: unless-stopped
    labels:
      - diun.enable=true
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    depends_on:
      - netdata
    volumes:
      - "${PROMETHEUS_ROOT_DIR}/prometheus.yml:/etc/prometheus/prometheus.yml:ro"
      - "${PROMETHEUS_ROOT_DIR}:/prometheus"
    environment:
      - TZ
    ports:
      - 9090:9090
    restart: unless-stopped
    labels:
      - diun.enable=true
  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    volumes:
      - "${GRAFANA_ROOT_DIR}:/var/lib/grafana"
    environment:
      - TZ
      - GF_AUTH_ANONYMOUS_ENABLED=true
    ports:
      - 3030:3000
    restart: unless-stopped
    labels:
      - diun.enable=true
  unbound:
    container_name: unbound
    image: crazymax/unbound:latest
    depends_on:
      - unbound-redis
    networks:
      macvlan0:
        ipv4_address: ${UNBOUND_MACVLAN_IP}
    ports:
      - 53:5053/tcp
      - 53:5053/udp
      - 8953:8953/tcp
    volumes:
      - "${UNBOUND_ROOT_DIR}/config:/config:ro"
      - "${UNBOUND_ROOT_DIR}/unbound:/var/run/unbound"
    healthcheck:
      disable: true
    restart: always
    labels:
      - diun.enable=true
  unbound-redis:
    image: redis:7-alpine
    container_name: unbound-redis
    networks:
      macvlan0:
        ipv4_address: ${UNBOUND_REDIS_MACVLAN_IP}
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - "${UNBOUND_ROOT_DIR}/redis:/data"
      - "${UNBOUND_ROOT_DIR}/redis/conf:/usr/local/etc/redis"
    restart: always
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    depends_on:
      - unbound
    hostname: pihole
    domainname: local
    mac_address: de:ad:be:ef:ff:01
    networks:
      macvlan0:
        ipv4_address: ${PIHOLE_MACVLAN_IP}
    dns:
      - "${UNBOUND_MACVLAN_IP}"
    ports:
      - 443/tcp
      - 53/tcp
      - 53/udp
      - 80/udp
    environment:
      - TZ
      - PIHOLE_UID=${PUID}
      - PIHOLE_GID=${PGID}
      - WEBPASSWORD=${PIHOLE_WEBPASSWORD}
      - ServerIP=${PIHOLE_MACVLAN_IP}
      - VIRTUAL_HOST=pihole.local
    volumes:
      - "${PIHOLE_ROOT_DIR}:/etc/pihole"
      - "${PIHOLE_DNSMASQ_DIR}:/etc/dnsmasq.d"
    restart: always
    labels:
      - diun.enable=true
  duplicati:
    container_name: duplicati
    image: linuxserver/duplicati:latest
    environment:
      - TZ
      - PGID
      - PUID
    volumes:
      - "${DUPLICATI_ROOT_DIR}:/config"
      - "${DUPLICATI_BACKUPS_DIR}:/backups"
      - "${DUPLICATI_SOURCE_DIR}:/source"
    ports:
      - 8200:8200
    restart: always
    labels:
      - diun.enable=true
  cloudflare-tunnel:
    container_name: cloudflare-tunnel
    image: cloudflare/cloudflared:latest
    network_mode: host
    command: tunnel run
    environment:
      - PUID
      - PGID
      - TZ
      - TUNNEL_TOKEN
    restart: always
    labels:
      - diun.enable=true
  diun:
    image: crazymax/diun:latest
    container_name: diun
    command: serve
    volumes:
      - "${DIUN_DATA_DIR}:/data"
      - "${DIUN_CONFIG_FILE}:/diun.yml:ro"
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - TZ
      - LOG_LEVEL=info
      - LOG_JSON=false
    restart: always
    labels:
      - diun.enable=true
  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    environment:
      - TZ
      - PGID
      - PUID
      - DOMAIN=${VAULTWARDEN_DOMAIN}
      - ADMIN_TOKEN=${VAULTWARDEN_ADMIN_TOKEN}
      - LOG_FILE=/log/vaultwarden.log
      - LOG_LEVEL=info
      - ROCKET_CLI_COLORS=false
      - EXTENDED_LOGGING=true
      - USE_SYSLOG=true
      - IP_HEADER=X-Forwarded-For
      - YUBICO_CLIENT_ID
      - YUBICO_SECRET_KEY
    volumes:
      - "${VAULTWARDEN_ROOT_DIR}:/data"
      - /var/log/vaultwarden.log:/log/vaultwarden.log
    ports:
      - 8082:80
    restart: always
    labels:
      - diun.enable=true

networks:
  macvlan0:
    external: true
